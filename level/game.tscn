[gd_scene load_steps=24 format=3 uid="uid://ddqpjbaduw5w0"]

[ext_resource type="Script" path="res://level/terrain.gd" id="1_rwlqv"]
[ext_resource type="Script" path="res://level/game.gd" id="1_t8u4u"]
[ext_resource type="PackedScene" uid="uid://dx5ef6x3ra2g" path="res://ship/ship.tscn" id="3_p70qk"]
[ext_resource type="Script" path="res://level/Water.gd" id="3_wo30p"]
[ext_resource type="PackedScene" uid="uid://dcstorccunohr" path="res://level/destination.tscn" id="5_b312y"]
[ext_resource type="Script" path="res://level/CameraToggle.gd" id="5_cy2qf"]
[ext_resource type="Material" uid="uid://bcoiid0gby8yj" path="res://assets/green.tres" id="5_ko8cj"]
[ext_resource type="Script" path="res://addons/DynamicCameraSystem/CameraViewpoint.gd" id="7_4x65g"]
[ext_resource type="PackedScene" uid="uid://cllk52ttqkq0p" path="res://level/cargo_port.tscn" id="9_wjkbu"]
[ext_resource type="PackedScene" uid="uid://dkng47bn1uykv" path="res://Models/Bridge/bridge_begin.tscn" id="11_dyecb"]
[ext_resource type="PackedScene" path="res://level/HUD.tscn" id="11_hg3qo"]
[ext_resource type="PackedScene" uid="uid://bgfbbk3stk57o" path="res://Models/Bridge/bridge_road.tscn" id="12_lojrj"]
[ext_resource type="PackedScene" uid="uid://cmejtsul38hqv" path="res://Models/Bridge/ground_road.tscn" id="13_qsnl8"]
[ext_resource type="PackedScene" uid="uid://lkfy15244dxg" path="res://ThunderStorm/thunder_storm.tscn" id="15_ii5b1"]
[ext_resource type="PackedScene" uid="uid://dxqls6cijoiuy" path="res://level/buoy.tscn" id="16_hhgii"]

[sub_resource type="Shader" id="Shader_e2vg5"]
code = "/**
* Ported from the original unity shader by Erik Roystan Ross
* https://roystan.net/articles/toon-water.html
* https://github.com/IronWarrior/ToonWaterShader
* Camera Depth taken from Bastiaan Olij's video on: https://www.youtube.com/watch?v=Jq3he9Lbj7M
*/

shader_type spatial;

const float SMOOTHSTEP_AA = 0.01;

uniform sampler2D surfaceNoise;
uniform sampler2D distortNoise;

uniform float beer_factor = 0.8;

uniform float foam_distance = 0.01;
uniform float foam_max_distance = 0.4;
uniform float foam_min_distance = 0.04;
uniform vec4 foam_color: source_color = vec4(1.0);

uniform vec2 surface_noise_tiling = vec2(1.0, 4.0);
uniform vec3 surface_noise_scroll = vec3(0.03, 0.03, 0.0);
uniform float surface_noise_cutoff: hint_range(0, 1) = 0.777;
uniform float surface_distortion_amount: hint_range(0, 1) = 0.27;

uniform vec4 _DepthGradientShallow: source_color = vec4(0.325, 0.807, 0.971, 0.725);
uniform vec4 _DepthGradientDeep: source_color = vec4(0.086, 0.407, 1, 0.749);
uniform float _DepthMaxDistance: hint_range(0, 1) = 1.0;
uniform float _DepthFactor = 1.0;

varying vec2 noiseUV;
varying vec2 distortUV;
varying vec3 viewNormal;

uniform sampler2D depth_texture : hint_depth_texture, filter_linear_mipmap;

vec4 alphaBlend(vec4 top, vec4 bottom)
{
	vec3 color = (top.rgb * top.a) + (bottom.rgb * (1.0 - top.a));
	float alpha = top.a + bottom.a * (1.0 - top.a);
	
	return vec4(color, alpha);
}

void vertex() {
	viewNormal = (MODELVIEW_MATRIX * vec4(NORMAL, 0.0)).xyz;
	noiseUV = UV * surface_noise_tiling;
	distortUV = UV;
}

void fragment() {
	// https://www.youtube.com/watch?v=Jq3he9Lbj7M
	float depth = texture(depth_texture, SCREEN_UV).r;
	depth = depth * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]);
	depth = depth + VERTEX.z;
	depth = exp(-depth * beer_factor);
	depth = 1.0 - depth;
	
	// Still unsure how to get properly the NORMAL from the camera
	// this was my best attempt
	vec3 existingNormal = vec3(dFdx(depth), dFdy(depth), 0);
	
	float normalDot = clamp(dot(existingNormal.xyz, viewNormal), 0.0, 1.0);
	float foamDistance = mix(foam_max_distance, foam_min_distance, normalDot);
	
	float foamDepth = clamp(depth / foamDistance, 0.0, 1.0);
	float surfaceNoiseCutoff = foamDepth * surface_noise_cutoff;
	
	vec4 distortNoiseSample = texture(distortNoise, distortUV);
	vec2 distortAmount = (distortNoiseSample.xy * 2.0 -1.0) * surface_distortion_amount;
	
	vec2 noise_uv = vec2(
		(noiseUV.x + TIME * surface_noise_scroll.x) + distortAmount.x , 
		(noiseUV.y + TIME * surface_noise_scroll.y + distortAmount.y)
	);
	float surfaceNoiseSample = texture(surfaceNoise, noise_uv).r;
	float surfaceNoiseAmount = smoothstep(surfaceNoiseCutoff - SMOOTHSTEP_AA, surfaceNoiseCutoff + SMOOTHSTEP_AA, surfaceNoiseSample);
	
	float waterDepth = clamp(depth / _DepthMaxDistance, 0.0, 1.0) * _DepthFactor;
	vec4 waterColor = mix(_DepthGradientShallow, _DepthGradientDeep, waterDepth);

	vec4 surfaceNoiseColor = foam_color;
    surfaceNoiseColor.a *= surfaceNoiseAmount;
	vec4 color = alphaBlend(surfaceNoiseColor, waterColor);
	
	ALBEDO = color.rgb;
	ALPHA = color.a;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_q4bne"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_dursa"]
noise = SubResource("FastNoiseLite_q4bne")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_80cyc"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_jcr81"]
noise = SubResource("FastNoiseLite_80cyc")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ti5nj"]
render_priority = 0
shader = SubResource("Shader_e2vg5")
shader_parameter/beer_factor = 0.8
shader_parameter/foam_distance = 0.01
shader_parameter/foam_max_distance = 0.4
shader_parameter/foam_min_distance = 0.04
shader_parameter/foam_color = Color(1, 1, 1, 1)
shader_parameter/surface_noise_tiling = Vector2(1, 4)
shader_parameter/surface_noise_scroll = Vector3(0.03, 0.03, 0)
shader_parameter/surface_noise_cutoff = 0.777
shader_parameter/surface_distortion_amount = 0.27
shader_parameter/_DepthGradientShallow = Color(0.325, 0.807, 0.971, 0.725)
shader_parameter/_DepthGradientDeep = Color(0.086, 0.407, 1, 0.749)
shader_parameter/_DepthMaxDistance = 1.0
shader_parameter/_DepthFactor = 1.0
shader_parameter/surfaceNoise = SubResource("NoiseTexture2D_jcr81")
shader_parameter/distortNoise = SubResource("NoiseTexture2D_dursa")

[sub_resource type="PlaneMesh" id="PlaneMesh_nub8u"]
material = SubResource("ShaderMaterial_ti5nj")
size = Vector2(10, 10)
subdivide_width = 20
subdivide_depth = 20

[sub_resource type="Environment" id="Environment_m4ws3"]
background_mode = 1
ambient_light_source = 2

[node name="Game" type="Node3D"]
script = ExtResource("1_t8u4u")

[node name="terrain" type="Node" parent="."]
script = ExtResource("1_rwlqv")

[node name="Water" type="MeshInstance3D" parent="terrain"]
transform = Transform3D(128, 0, 0, 0, 128, 0, 0, 0, 128, 0, 0, 0)
mesh = SubResource("PlaneMesh_nub8u")
script = ExtResource("3_wo30p")

[node name="base" type="CSGBox3D" parent="terrain"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -5, 0)
visible = false
use_collision = true
size = Vector3(256, 12, 256)
material = ExtResource("5_ko8cj")

[node name="CSGBox3D" type="CSGBox3D" parent="terrain/base"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4, 0)
operation = 2
size = Vector3(250, 4, 250)

[node name="Bridge" type="Node3D" parent="terrain"]

[node name="BridgeBegin" parent="terrain" instance=ExtResource("11_dyecb")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -126, 0, 0)

[node name="BridgeRoad" parent="terrain" instance=ExtResource("12_lojrj")]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -89.2762, 0, 0)

[node name="GroundRoad" parent="terrain" instance=ExtResource("13_qsnl8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 15)

[node name="BridgeEnd" parent="terrain" instance=ExtResource("11_dyecb")]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 0, 0)

[node name="rendering" type="Node" parent="."]

[node name="Camera3D" type="Camera3D" parent="rendering"]
transform = Transform3D(0.994858, 0.0457289, 0.090371, 0.0165298, -0.953616, 0.300572, 0.099924, -0.297533, -0.949468, -77.9014, 10.9664, 14.2385)
current = true

[node name="CameraToggle" type="Node" parent="rendering"]
script = ExtResource("5_cy2qf")

[node name="StaticCamera" type="Node3D" parent="rendering" node_paths=PackedStringArray("watch") groups=["camera_dynamic"]]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 25, 0)
script = ExtResource("7_4x65g")
watch = NodePath("../../ship")
speed_movement = 5.0
speed_rotation = 5.0

[node name="FollowShipCamera" type="Node3D" parent="rendering" node_paths=PackedStringArray("watch", "follow") groups=["camera_dynamic"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1.434, 3, 2.453)
script = ExtResource("7_4x65g")
watch = NodePath("../../ship")
follow = NodePath("../../ship/Follow")
speed_movement = 10.0
speed_rotation = 4.0

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="rendering"]
transform = Transform3D(0.965926, -0.0669873, -0.25, 0.258819, 0.25, 0.933013, 0, -0.965926, 0.258819, 0, 1.32951, 0)
visible = false

[node name="OmniLight3D" type="OmniLight3D" parent="rendering"]
light_energy = 10.882
omni_range = 246.754

[node name="ship" parent="." node_paths=PackedStringArray("destination") instance=ExtResource("3_p70qk")]
transform = Transform3D(0.990517, 0, 0.137393, 0, 1, 0, -0.137393, 0, 0.990517, 19.7137, -0.290461, 53.6842)
destination = NodePath("../destination")

[node name="Follow" type="Node3D" parent="ship"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12, 8, 0)

[node name="destination" parent="." instance=ExtResource("5_b312y")]

[node name="CargoPort" parent="." instance=ExtResource("9_wjkbu")]

[node name="HUD" parent="." instance=ExtResource("11_hg3qo")]

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="."]

[node name="ThunderStorm" parent="." instance=ExtResource("15_ii5b1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 15.6935, 15, 16.733)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_m4ws3")

[node name="ThunderStorm2" parent="." instance=ExtResource("15_ii5b1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 79.5483, 15, 71.6099)
_storm_speed = 0.05

[node name="ThunderStorm3" parent="." instance=ExtResource("15_ii5b1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -92.6255, 15, -70.8407)
_storm_speed = 0.1

[node name="ThunderStorm4" parent="." instance=ExtResource("15_ii5b1")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -75.8656, 15, 69.7123)
_storm_speed = 0.1

[node name="buoy" parent="." instance=ExtResource("16_hhgii")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -29.9973, 0, 13.9182)
